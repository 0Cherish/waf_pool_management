<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maoxian.mapper.RequestMapper">
    <insert id="insert">
        insert into request
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">uuid,</if>
            <if test="method != null">method,</if>
            <if test="sourceIp != null">source_ip,</if>
            <if test="mode != null">mode,</if>
            <if test="startTime != null">start_time,</if>
            <if test="time != null">time</if>
            <if test="status != null">status</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">#{uuid},</if>
            <if test="method != null">#{method},</if>
            <if test="sourceIp != null">#{sourceIp},</if>
            <if test="mode != null">#{mode},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="time != null">#{time}</if>
            <if test="status != null">#{status}</if>
        </trim>
    </insert>
    <update id="update">
        update request
        <set>
            <if test="uuid != null">uuid = #{uuid},</if>
            <if test="method != null">method = #{method},</if>
            <if test="sourceIp != null">sourceIp = #{sourceIp},</if>
            <if test="mode != null">mode = #{mode},</if>
            <if test="startTime != null">startTime = #{startTime},</if>
            <if test="time != null">time = #{time}</if>
            <if test="status != null">status = #{status}</if>
        </set>
        where id = #{id}
    </update>
    <select id="count" resultType="Integer">
        select count(id)
        from request
        <where>
            <if test="uuid != null and uuid != ''">
                uuid like #{uuid}
            </if>
        </where>
    </select>
    <select id="selectList" resultType="Request">
        select id, uuid, method, source_ip, url, mode, start_time, time, status
        from request
        <where>
            <if test="uuid != null and uuid !=''">
                uuid like #{uuid}
            </if>
        </where>
        limit #{start}, #{pageSize}
    </select>
    <select id="selectRequestTimeAfterTargetTime" resultType="Integer">
        select time
        from request
        where start_time > #{targetTime}
    </select>
    <select id="countForStatus" resultType="Integer">
        select count(id)
        from request
        where status = #{status}
    </select>
    <select id="selectModeById" resultType="Integer">
        select mode
        from request
        where id = #{id}
    </select>
</mapper>